// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String?  @unique
  accounts  PortfolioAccount[]
  authAccounts Account[]
  sessions  Session[]
  createdAt DateTime @default(now())
}

model PortfolioAccount {
  id        String        @id @default(cuid())
  user      User          @relation(fields: [userId], references: [id])
  userId    String
  name      String
  baseCcy   String        @default("USD")
  txns      Transaction[]
  createdAt DateTime      @default(now())
}

model Security {
  id          String   @id @default(cuid())
  symbol      String   @unique
  name        String
  exchange    String?
  assetClass  String    @default("EQUITY")
  createdAt   DateTime  @default(now())
  prices      Price[]
  actions     CorporateAction[]
  txns        Transaction[]
}

model Price {
  id         String   @id @default(cuid())
  security   Security @relation(fields: [securityId], references: [id])
  securityId String
  asOf       DateTime
  open       Decimal?
  high       Decimal?
  low        Decimal?
  close      Decimal
  adjClose   Decimal?
  volume     Int?
  source     String
  @@unique([securityId, asOf], name: "securityId_asOf")
}

model CorporateAction {
  id         String   @id @default(cuid())
  security   Security @relation(fields: [securityId], references: [id])
  securityId String
  date       DateTime
  type       String
  ratio      Decimal?
  cash       Decimal?
}

model Transaction {
  id         String    @id @default(cuid())
  account    PortfolioAccount   @relation(fields: [accountId], references: [id])
  accountId  String
  security   Security? @relation(fields: [securityId], references: [id])
  securityId String?
  type       String
  qty        Decimal?
  price      Decimal?
  fee        Decimal?
  tradeDate  DateTime
  settleDate DateTime?
  notes      String?
  createdAt  DateTime  @default(now())
}

// NextAuth models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @map("refresh_token")
  access_token      String? @map("access_token")
  expires_at        Int?    @map("expires_at")
  token_type        String? @map("token_type")
  scope             String?
  id_token          String? @map("id_token")
  session_state     String? @map("session_state")
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// --- Market data models (provider-agnostic) ---

model Instrument {
  id         String   @id @default(cuid())
  symbol     String   @unique
  name       String?
  exchange   String?
  currency   String?  @default("USD")
  figi       String?
  cik        String?
  cusip      String?
  createdAt  DateTime @default(now())

  dailyBars   DailyBar[]
  minuteBars  MinuteBar[]
  quotes      RealtimeQuote[]
  actions     CorporateActionEvent[]
}

model DailyBar {
  id           String    @id @default(cuid())
  instrument   Instrument @relation(fields: [instrumentSymbol], references: [symbol])
  instrumentSymbol String
  t            DateTime
  o            Decimal?
  h            Decimal?
  l            Decimal?
  c            Decimal
  v            Int?
  source       String    @default("unknown")

  @@unique([instrumentSymbol, t], name: "instrumentSymbol_t_day")
  @@index([instrumentSymbol, t])
}

model MinuteBar {
  id           String    @id @default(cuid())
  instrument   Instrument @relation(fields: [instrumentSymbol], references: [symbol])
  instrumentSymbol String
  t            DateTime
  o            Decimal?
  h            Decimal?
  l            Decimal?
  c            Decimal
  v            Int?
  source       String    @default("unknown")

  @@unique([instrumentSymbol, t], name: "instrumentSymbol_t_min")
  @@index([instrumentSymbol, t])
}

model RealtimeQuote {
  id           String    @id @default(cuid())
  instrument   Instrument @relation(fields: [instrumentSymbol], references: [symbol])
  instrumentSymbol String
  ts           DateTime
  bid          Decimal?
  ask          Decimal?
  last         Decimal?
  source       String    @default("unknown")

  @@index([instrumentSymbol, ts])
}

model CorporateActionEvent {
  id           String     @id @default(cuid())
  instrument   Instrument @relation(fields: [instrumentSymbol], references: [symbol])
  instrumentSymbol String
  date         DateTime
  type         String     // SPLIT | DIVIDEND | OTHER
  splitRatio   Decimal?
  dividend     Decimal?
  exDate       DateTime?
  createdAt    DateTime   @default(now())

  @@index([instrumentSymbol, date])
}
